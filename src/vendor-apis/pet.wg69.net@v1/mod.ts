export * from "./structs.ts";

// Autogenerated API file for PetWg69NetV1
import * as c from "https://deno.land/x/kubernetes_apis@v0.3.1/common.ts";
import * as operations from "https://deno.land/x/kubernetes_apis@v0.3.1/operations.ts";
import * as MetaV1 from "https://deno.land/x/kubernetes_apis@v0.3.1/builtin/meta@v1/structs.ts";
import * as PetWg69NetV1 from "./structs.ts";

export class PetWg69NetV1Api {
  #client: c.RestClient;
  #root = "/apis/pet.wg69.net/v1/";
  constructor(client: c.RestClient) {
    this.#client = client;
  }

  async getBlockDeviceList(opts: operations.GetListOpts = {}) {
    const resp = await this.#client.performRequest({
      method: "GET",
      path: `${this.#root}blockdevices`,
      expectJson: true,
      querystring: operations.formatGetListOpts(opts),
      abortSignal: opts.abortSignal,
    });
    return PetWg69NetV1.toBlockDeviceList(resp);
  }

  async watchBlockDeviceList(opts: operations.WatchListOpts = {}) {
    const resp = await this.#client.performRequest({
      method: "GET",
      path: `${this.#root}blockdevices`,
      expectJson: true,
      expectStream: true,
      querystring: operations.formatWatchListOpts(opts),
      abortSignal: opts.abortSignal,
    });
    return resp.pipeThrough(new c.WatchEventTransformer(PetWg69NetV1.toBlockDevice, MetaV1.toStatus));
  }

}
